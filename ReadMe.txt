1. Orb_videotest: Детектор особых точек ORB, детектирует особые точки с видео потока.
2. OrbDisMatch: Поиск объекта с фото-экземпляра на видео-сцене. Существует несколько вариантов "матчей"-алгоритмов 
для сравнения результатов поиска особых точек. Детектор - ORB.
3. Template Matching: Образец алгоритма поиска на фото сцене по шаблону из opencv. Сравнение с шаблоном 1 к 1.
4. TCornerDet: Первая попытка сделать детектор углов. Алгоритм: сравнение областей каждой точки изображения 
с её соседями в 8-ми направлениях и если область точки уникальна по сравнению с её соседями, то её координаты 
записываются в вектор.
Алгоритм неустойчив к поворотам и шумам и вообще работает крайне ужасно. 
5.LenVectorDisMatch: нахождение углов на шаблоне и создание вектора длин векторов построенных от "главного угла"(угол с
наибольшим коэффицентом схожести с углом) к остальным углам. Затем сравнение с изображением "фона" и нахождением
подъодящей точки от которой мы можем построить то же количество векторов той же длины.
@@@
Так как объект может вращаться, вычисление длины вектора может иметь различные значения, которые будут лежать в
эпсилон-окрестности, следовательно сравнение длин векторов нужно поизводить, высчитав эту погрешность.
@@@
